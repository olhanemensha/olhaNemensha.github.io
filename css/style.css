.page{background:linear-gradient(90deg,#dc143c,#cee8dd,#029bc4);font-family:Gotham,Arial,Helvetica,sans-serif;font-size:18px;font-weight:400;font-size:16px;color:#000;max-width:1800px;overflow-x:hidden;margin:0 auto}@media (max-width:768px){.page{background:linear-gradient(90deg,#cee8dd,#029bc4)}}@media (max-width:576px){.page{background:linear-gradient(90deg,#cee8dd,#029bc4)}}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}:focus{outline:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{-webkit-appearance:none;-moz-appearance:none}input[type=search]{-webkit-appearance:none;-moz-appearance:none}audio,canvas,video{display:inline-block;*display:inline;*zoom:1;max-width:100%}audio:not([controls]){display:none;height:0}[hidden]{display:none}html{font-size:100%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}a:focus{outline:thin dotted}a:active,a:hover{outline:0}img{border:0;-ms-interpolation-mode:bicubic}figure,form{margin:0}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0;white-space:normal;*margin-left:-7px}button,input,select,textarea{font-size:100%;margin:0;vertical-align:baseline;*vertical-align:middle}button,input{line-height:normal}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer;*overflow:visible}button[disabled],html input[disabled]{cursor:default}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0;*height:13px;*width:13px}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}button,html,input,select,textarea{color:#222}::-moz-selection{background:#b3d4fc;text-shadow:none}::selection{background:#b3d4fc;text-shadow:none}img{vertical-align:middle}fieldset{border:0;margin:0;padding:0}textarea{resize:vertical}.chromeframe{margin:.2em 0;background:#ccc;color:#000;padding:.2em 0}.header__menu{display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around;background:linear-gradient(90deg,#dc143c,#cee8dd,#029bc4)}.header__img{width:60px;height:60px}@media (max-width:768px){.header__img{display:none}}.menu__list{display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around}@media (max-width:768px){.menu__list{display:none;position:absolute;right:0;z-index:1}}.menu__item{padding:15px}.menu__link{color:#fff;text-decoration:none;font-size:20px;font-weight:400;line-height:22px;text-align:left;text-transform:uppercase}.menu__link:hover{color:#029bc4;text-decoration:none}.burger__menu{position:fixed;top:8px;right:20px;z-index:6;width:50px;height:50px;border-radius:50%;background-color:hsla(0,0%,100%,.5);transition:.4s;display:none}@media (max-width:768px){.burger__menu{display:block}}.burger__cl,.burger__open{display:none}.close__active{display:block;z-index:5;position:absolute;top:10px;right:180px}.burger__close{width:32px;height:32px}.burger__close:after,.burger__close:before{position:absolute;left:15px;content:" ";height:33px;width:2px;background-color:#dc143c}.burger__close:before{transform:rotate(45deg)}.burger__close:after{transform:rotate(-45deg)}.burger__menu:hover{background-color:hsla(0,0%,100%,.8)}.burger__lines,.burger__lines:after,.burger__lines:before{position:absolute;width:30px;height:3px;background-color:#dc143c;transition:.4s}.burger__lines{top:50%;left:50%;transform:translate(-50%,-50%)}.burger__lines:before{content:"";top:-12px}.burger__lines:after{content:"";top:12px}.menu__bur{padding-top:50px;width:200px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column;background:linear-gradient(90deg,#ebb3bc,#cee8dd)}#navbar{position:fixed;top:0;width:100%;z-index:2}.main{background-image:url(../image/pexels-engin-akyurt-111.jpg);background-repeat:none;background-size:cover;height:100vh;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column}.main__item{padding-top:50px;font-size:80px;font-weight:700;line-height:22px;text-align:center;text-transform:uppercase;letter-spacing:4px}@media (max-width:768px){.main__item{font-size:60px}}@media (max-width:576px){.main__item{font-size:40px}}.main__text{font-size:18px;font-weight:700;line-height:22px;text-align:center;text-transform:uppercase;letter-spacing:5.4px;padding-top:50px}@media (max-width:768px){.main__text{font-size:18px}}@media (max-width:576px){.main__text{font-size:14px}}.block{background-image:url(../image/cocktails-3252160_1280.jpg);background-repeat:none;background-size:cover}.block__color{padding:100px 10px 150px;box-sizing:border-box}@media (max-width:768px){.block__color{padding:70px 10px 150px}}@media (max-width:576px){.block__color{padding:50px 10px 150px}}.block__red{background-color:rgba(220,20,60,.5)}.block__blue{background-color:rgba(0,191,255,.5)}.block__form{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column}.block__item{font-size:30px;font-weight:700;line-height:35px;padding-bottom:50px;text-align:center;text-transform:uppercase}@media (max-width:768px){.block__item{font-size:25px;padding-bottom:40px}}@media (max-width:576px){.block__item{font-size:20px;padding-bottom:30px}}.block__input{padding-left:10px;font-size:25px;color:#fff;background:transparent;border:1px solid #fff}.block__input::-webkit-input-placeholder{color:#fff}.block__input::-moz-placeholder{color:#fff}.block__input::-ms-input-placeholder{color:#fff}.block__input::placeholder{color:#fff}.block__input.error{border:2px solid red}.block__btn{margin-top:30px;width:100px;background:transparent;color:#fff;border:1px solid #fff;font-size:30px}.block__btn:hover{color:#ddc9c9}.block__result{padding-top:20px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column}.block__link{padding:5px;text-decoration:none;text-align:center;padding-right:15px;font-family:Oswald;font-size:30px;line-height:30px;font-weight:400;text-transform:uppercase;letter-spacing:.1em;color:#1c1c1b}@media (max-width:768px){.block__link{font-size:20px}}@media (max-width:576px){.block__link{font-size:18px}}.block__info{padding:10px;text-align:center;font-family:Oswald;font-size:30px;line-height:30px;font-weight:400;text-transform:uppercase;letter-spacing:.1em;color:#1c1c1b}@media (max-width:768px){.block__info{font-size:20px}}@media (max-width:576px){.block__info{font-size:16px}}.block__text{font-size:14px;font-family:Oswald;color:#1c1c1b}.services{padding:100px 20px 20px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column}@media (max-width:768px){.services{padding:60px 20px 20px}}@media (max-width:576px){.services{padding:40px 20px 20px}}.services__item{text-align:center;color:#1c1c1b;font-size:44px;font-weight:600;line-height:22px;text-transform:uppercase;padding-bottom:50px}@media (max-width:768px){.services__item{font-size:34px}}@media (max-width:576px){.services__item{font-size:20px}}.services__text{text-align:center;color:#1c1c1b;font-size:18px;font-weight:400;line-height:22px;text-transform:uppercase}@media (max-width:768px){.services__text{font-size:16px}}@media (max-width:576px){.services__text{font-size:14px}}.services__block{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.services__list{margin:15px;max-width:450px;border:1px solid #fff;position:relative}.services__img{width:100%}.services__btn{padding:15px;text-transform:uppercase;border:2px solid #fff;text-align:center;position:absolute;color:#fff;font-size:24px;font-weight:400;left:50%;bottom:50px;transform:translateX(-50%)}@media (max-width:768px){.services__btn{font-size:16px}}@media (max-width:576px){.services__btn{font-size:14px}}.services__btn:hover{text-decoration:none;color:#ebb3bc}.choose__tab{display:-ms-flexbox;display:flex}.choose__list{padding:20px;list-style-type:none;text-align:center}.choose__link,.choose__list,.choose__list:hover{text-decoration:none}.choose__link{text-align:center;padding-right:15px;font-family:Oswald;font-size:30px;line-height:30px;font-weight:400;text-transform:uppercase;letter-spacing:.1em;color:#1c1c1b}.choose__add{width:200px;margin:50px auto 0;position:relative;border:1px solid rgba(52,34,24,.3)}.choose__img{max-width:100%;height:auto;display:block}.choose__item{text-align:center;width:100%;position:absolute;line-height:1.1;font-size:1.2em;font-weight:400;left:0;bottom:0;padding:6px 20px 6px 10px;background:rgba(52,34,24,.3);color:#fff}.choose__btn{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.tabNavList li a.act{font-size:32px;color:#9acd32;text-decoration:none}.tabNavList li a:hover{text-decoration:none}.tab{display:none;padding:10px}.tab.act{box-sizing:border-box;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-wrap:wrap;flex-wrap:wrap}.popup{background-image:url(../image/orange-2592042_1920.jpg);background-repeat:none;background-size:cover;position:fixed;width:1000px;top:50%;left:50%;transform:translate(-50%,-50%);display:none;border-radius:5%;z-index:4;padding:20px;overflow:auto}@media (max-width:1200px){.popup{width:70%;height:70%}}@media (max-width:992px){.popup{width:70%;height:70%}}@media (max-width:768px){.popup{width:60%;height:60%}}@media (max-width:576px){.popup{width:40%;height:40%}}.choose__close{width:15px;height:15px}.popup__close{cursor:pointer;margin:5px}.popup__close:hover .choose__close{fill:#9acd32}.popup__opened{position:fixed;right:0;left:0;overflow:hidden}#overlay{z-index:3;position:fixed;background-color:#000;opacity:.9;width:100%;height:100%;top:0;left:0;cursor:pointer;display:none}.random__container{background-image:url(../image/grapefruit-slices-background.jpg);background-repeat:none;background-size:cover;height:1000px}@media (max-width:576px){.random__container{height:800px}}.random__item{text-align:center;color:#fff;font-size:80px;font-weight:800;line-height:22px;text-transform:uppercase;padding:50px 0;letter-spacing:5px}@media (max-width:768px){.random__item{font-size:60px}}@media (max-width:576px){.random__item{font-size:40px}}.random__text{font-family:Oswald;text-align:center;color:#fff;font-size:22px;font-weight:400;padding-bottom:20px}@media (max-width:768px){.random__text{font-size:18px}}@media (max-width:576px){.random__text{font-size:14px}}.random__btn{padding:10px;text-transform:uppercase;border:2px solid #fff;text-align:center;color:#fff;font-size:18px;font-weight:400;margin-bottom:20px}@media (max-width:768px){.random__btn{font-size:16px}}@media (max-width:576px){.random__btn{font-size:12px}}.random__img{display:block;margin:10px auto;width:80%}.random__info{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column;position:relative}.random__info_item{font-family:Oswald;text-align:center;color:#e99210;font-size:40px;font-weight:700;padding-bottom:30px}@media (max-width:768px){.random__info_item{font-size:16px}}@media (max-width:576px){.random__info_item{font-size:14px}}.random__btn:hover{text-decoration:none;color:#e99210;border:2px solid #e99210}.loader{margin-top:200px;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);display:-ms-flexbox;display:flex}.dash{margin:0 15px;width:35px;height:15px;border-radius:8px;background:#e6990a}.uno{margin-right:-18px;transform-origin:center left;animation:a 3s linear infinite}.dos{animation:b 3s linear infinite;animation-delay:.2s}.dos,.tres{transform-origin:center right}.tres{animation:c 3s linear infinite;animation-delay:.3s}.cuatro{transform-origin:center right;animation:d 3s linear infinite;animation-delay:.4s}@keyframes a{0%{transform:rotate(0deg)}25%{transform:rotate(1turn)}30%{transform:rotate(370deg)}35%{transform:rotate(1turn)}to{transform:rotate(1turn)}}@keyframes b{0%{transform:rotate(0deg)}20%{transform:rotate(0deg)}30%{transform:rotate(-180deg)}35%{transform:rotate(-190deg)}40%{transform:rotate(-180deg)}78%{transform:rotate(-180deg)}95%{transform:rotate(-1turn)}98%{transform:rotate(-370deg)}to{transform:rotate(-1turn)}}@keyframes c{0%{transform:rotate(0deg)}27%{transform:rotate(0deg)}40%{transform:rotate(180deg)}45%{transform:rotate(190deg)}50%{transform:rotate(180deg)}62%{transform:rotate(180deg)}75%{transform:rotate(1turn)}80%{transform:rotate(370deg)}85%{transform:rotate(1turn)}to{transform:rotate(1turn)}}@keyframes d{0%{transform:rotate(0deg)}38%{transform:rotate(0deg)}60%{transform:rotate(-1turn)}65%{transform:rotate(-370deg)}75%{transform:rotate(-1turn)}to{transform:rotate(-1turn)}}.question{width:100%}.question__container{padding:100px;max-width:580px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column}@media (max-width:768px){.question__container{padding:50px}}@media (max-width:576px){.question__container{padding:30px}}.question__block{padding:25px 0;border-top:1px solid #dc143c}.question__block:last-child{border-bottom:1px solid #dc143c}.question__cont{display:-ms-flexbox;display:flex;position:relative}.question__plus{position:absolute;top:8px;left:0;margin:2px;width:20px;height:20px}.question__open{display:none}.question__open.active{display:block}.question__close{display:none}.question__close.active{display:block}.question__minus{position:absolute;top:8px;left:0;margin:2px;width:20px;height:20px}.question__item{padding:10px;text-align:center;font-family:Oswald;font-size:30px;font-weight:400;text-transform:uppercase;letter-spacing:.2em;color:#1c1c1b}@media (max-width:768px){.question__item{font-size:25px}}@media (max-width:576px){.question__item{font-size:20px}}.question__text{padding-left:35px;font-family:Oswald;font-size:18px;font-weight:300;letter-spacing:.28em;color:#1c1c1b}@media (max-width:768px){.question__text{font-size:16px}}@media (max-width:576px){.question__text{font-size:14px}}.question__answer{padding:10px;font-family:Oswald;font-size:18px;font-weight:300;letter-spacing:.04em;color:#1c1c1b;display:none}@media (max-width:768px){.question__answer{font-size:16px}}@media (max-width:576px){.question__answer{font-size:14px}}.question__answer.active{display:block}.footer{padding:50px 0}@media (max-width:768px){.footer{padding:35px 0}}@media (max-width:576px){.footer{padding:25px 0}}.footer__info{padding:75px;text-align:center;font-family:Oswald;font-size:14px;line-height:40px;font-weight:300;text-transform:uppercase;letter-spacing:.28em;color:#1c1c1b;position:relative}@media (max-width:768px){.footer__info{padding:50px}}@media (max-width:576px){.footer__info{padding:25px}}.footer__info:before,.footer__shedue:before{top:20px;left:0;position:absolute;content:"";width:371px;height:4px;background-color:#dc143c}@media (max-width:1200px){.footer__info:before,.footer__shedue:before{left:50%;transform:translateX(-50%);width:300px;height:2px}}@media (max-width:992px){.footer__info:before,.footer__shedue:before{left:50%;transform:translateX(-50%);width:250px;height:2px}}@media (max-width:768px){.footer__info:before,.footer__shedue:before{display:none}}@media (max-width:576px){.footer__info:before,.footer__shedue:before{display:none}}.footer__social{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column}.footer__logo{width:100%}@media (max-width:992px){.footer__logo{width:50%}}@media (max-width:768px){.footer__logo{width:60%}}@media (max-width:576px){.footer__logo{width:80%}}.footer__icons{padding:20px 0;width:100%;display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around}.footer__icon{width:20px;height:20px;fill:#dc143c}.footer__link:hover .footer__icon{fill:#029bc4}.footer__item{text-align:center;font-family:Oswald;font-size:18px;line-height:30px;font-weight:700;text-transform:uppercase;letter-spacing:.15em;padding-bottom:20px}@media (max-width:768px){.footer__item{font-size:16px}}@media (max-width:576px){.footer__item{font-size:14px}}.footer__shedue{padding:75px}@media (max-width:768px){.footer__shedue{padding:50px}}@media (max-width:576px){.footer__shedue{padding:25px}}.footer__days{font-weight:400}.footer__days,.footer__hours{text-align:center;font-family:Oswald;font-size:14px;line-height:40px;text-transform:uppercase;letter-spacing:.28em;color:#dc143c}.footer__hours{font-weight:300}.footer__input::-webkit-input-placeholder{text-align:left;font-family:Oswald;font-size:16px;line-height:75px;font-weight:300;letter-spacing:.28em;color:#dc143c}.footer__input::-moz-placeholder{text-align:left;font-family:Oswald;font-size:16px;line-height:75px;font-weight:300;letter-spacing:.28em;color:#dc143c}.footer__input::-ms-input-placeholder{text-align:left;font-family:Oswald;font-size:16px;line-height:75px;font-weight:300;letter-spacing:.28em;color:#dc143c}.footer__input::placeholder{text-align:left;font-family:Oswald;font-size:16px;line-height:75px;font-weight:300;letter-spacing:.28em;color:#dc143c}@media (max-width:1200px){.footer__input::-webkit-input-placeholder{font-size:14px}.footer__input::-moz-placeholder{font-size:14px}.footer__input::-ms-input-placeholder{font-size:14px}.footer__input::placeholder{font-size:14px}}@media (max-width:992px){.footer__input::-webkit-input-placeholder{font-size:14px}.footer__input::-moz-placeholder{font-size:14px}.footer__input::-ms-input-placeholder{font-size:14px}.footer__input::placeholder{font-size:14px}}.footer__input{background:transparent;padding:15px;border:none;border-right:2px solid #dc143c}@media (max-width:1200px){.footer__input{padding:10px}}@media (max-width:992px){.footer__input{padding:10px}}.footer__btn{background:transparent;border:none;cursor:pointer}.footer__arrow{width:50px;height:25px;fill:#dc143c}.footer__btn:hover .footer__arrow{fill:#029bc4;height:27px}@media (max-width:768px){.footer__btn:hover .footer__arrow{height:20px}}@media (max-width:576px){.footer__btn:hover .footer__arrow{height:20px}}.footer__subcribe{padding:60px 0 20px;position:relative;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column}@media (max-width:768px){.footer__subcribe{padding:40px 0 15px}}@media (max-width:576px){.footer__subcribe{padding:30px 0 10px}}.footer__subcribe:before{content:"";width:4px;height:55px;top:0;left:160px;position:absolute;background-color:#dc143c}@media (max-width:1200px){.footer__subcribe:before{left:50%;transform:translateX(-50%);width:2px;height:40px}}@media (max-width:992px){.footer__subcribe:before{left:50%;transform:translateX(-50%);width:2px;height:35px}}@media (max-width:768px){.footer__subcribe:before{display:none}}@media (max-width:576px){.footer__subcribe:before{display:none}}.footer__text{padding-top:15px;text-align:center;font-family:Oswald;font-size:11px;line-height:40px;font-weight:300;text-transform:uppercase;letter-spacing:.28em;color:#1c1c1b}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
